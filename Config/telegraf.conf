# Outputs
[[outputs.influxdb]]
    url = "http://influxdb:8086"
    database = "telegraf"
    precision = "s"

[[inputs.docker]]
    endpoint = "unix:///var/run/docker.sock"
    container_names = []
    timeout = "5s"
    perdevice = true
    # Whether to report for each container total blockIO and network stats or not
    total = false
    # Docker labels to include and exclude as tags. Globs accepted
    # Note that an empty array for both will include all labels as tags

[[inputs.docker_log]]
    # Docker Endpoint
    # Uncomment to use TCP:
    # endpoint = "tcp://[ip]:[port]"
    # Uncomment to use environment variables (ie, docker-machine)
    # endpoint = "ENV"
    # Uncomment to use the docker socket
    endpoint = "unix:///var/run/docker.sock"



[[inputs.cpu]]
    percpu = true
    totalcpu = true
    # Filter all fields beginning with 'time_'
    fielddrop = ["time_*"]

[[inputs.disk]]
    [inputs.disk.tagpass]
        # Tagpass conditions are 'OR', 'NOT', 'AND'
        # If the filesystem is ext4 or xfs, OR the path is /opt or home, then the metric passes
        fstype = ["ext4", "xfs"]
        # Globs can also be used on the tag values
        path = ["/opt", "/home*"]

[[inputs.diskio]]

[[inputs.kernel]]

[[inputs.net]]

[[inputs.netstat]]

[[inputs.nstat]]


[[inputs.net_response]]
    # Collect response time of a TCP or UDP connection
    # Protocol, must be "tcp" or "udp"
    # Note, UDP requires a send/expect string pair
    protocol = "tcp"
    # Server address (default localhost)
    address = "localhost:80"

[[inputs.processes]]

[[inputs.sensors]]

[[inputs.swap]]

[[inputs.mem]]

[[inputs.internal]]

[[inputs.interrupts]]

[[inputs.temp]]

[[inputs.wireless]]

[[inputs.bond]]

[[inputs.dns_query]]
    # Get DNS information /response time from configured domains.
    # Super helpful for checking status of service or machine
    # Servers to query
    servers = ["8.8.8.8", "4.4.4.4."]
    domains = ["exampledomain.tld"]

[[inputs.system]]

[[inputs.github]]
    # List of repositories to monitor
    repositories = [
        "MattLombana/dotfiles",
        "MattLombana/SysAdmin"
    ]
    # Github API Access token. Unauthenticated requests are limited to 60 per hour
    access_token = "CHANGEME"

[[inputs.openweathermap]]
    # OpenWeatherMap API Key
    app_id = "CHANGEME"
    # City ID's to collect weather data from
    city_id = ["098008"]
    # APIs to fetch. Can contain "weather" or "forecast"
    fetch = ["weather", "forecast"]
    # Preferred unit system for temperature and wind speed. Can be one of "metric", "imperial", or "standard"
    units = "metric"
    # Query interval. OpenWeather Map data is updated every 10 minutes.
    interval = "10m"



